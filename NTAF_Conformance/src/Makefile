# This Makefile was generated by the Makefile Generator
# of the TTCN-3 Test Executor version CRL 113 200/2 R2A
# for ethlel (ethlel@GlobalWarning2) on Wed Dec 19 11:27:06 2012

# Copyright (c) 2000-2021 Ericsson Telecom AB
# For trouble reporting use the tool MHWeb.
# For TR writers guide please visit the web page: http://ttcn.ericsson.se

# The following make commands are available:
# - make, make all      Builds the executable test suite.
# - make archive        Archives all source files.
# - make check          Checks the semantics of TTCN-3 and ASN.1 modules.
# - make clean          Removes all generated files.
# - make compile        Translates TTCN-3 and ASN.1 modules to C++.
# - make dep            Creates/updates dependency list.
# - make objects        Builds the object files without linking the executable.
#
# Set these variables...
#

# The path of your TTCN-3 Test Executor installation:
# Uncomment this line to override the environment variable.



# Your platform: (SOLARIS, SOLARIS8, LINUX, FREEBSD or WIN32)
PLATFORM = LINUX

# Your C++ compiler:
# (if you change the platform, you may need to change the compiler)
CXX = g++

# Flags for the C++ preprocessor (and makedepend as well):
CPPFLAGS = -D$(PLATFORM) -I$(TTCN3_DIR)/include

# Flags for the C++ compiler:
CXXFLAGS = -Wall

# Flags for the linker:
LDFLAGS =  -fuse-ld=gold

ifeq ($(PLATFORM), WIN32)
# Silence linker warnings.
LDFLAGS += -Wl,--enable-auto-import,--enable-runtime-pseudo-reloc
endif

# Flags for the TTCN-3 and ASN.1 compiler:
COMPILER_FLAGS = -L  -w

# Execution mode: (either ttcn3 or ttcn3-parallel)
TTCN3_LIB = ttcn3-parallel

# The path of your OpenSSL installation:
# If you do not have your own one, leave it unchanged.
OPENSSL_DIR = $(TTCN3_DIR)

# The path of your libxml2 installation:
# If you do not have your own one, leave it unchanged.
XMLDIR = $(TTCN3_DIR)

# Directory to store the archived source files:
# Note: you can set any directory except ./archive
ARCHIVE_DIR = backup

#
# You may change these variables. Add your files if necessary...
#

# TTCN-3 modules of this project:
TTCN3_MODULES = NTAF_exec.ttcn NTAF_common.ttcn XSD.ttcn UsefulTtcn3Types.ttcn http_www_w3_org_XML_1998_namespace.ttcn http_ntaforum_org_2011_activation.ttcn http_ntaforum_org_2011_harness.ttcn http_ntaforum_org_2011_registry.ttcn \
http_jabber_org_protocol_pubsub.ttcn  http_jabber_org_protocol_pubsub_errors.ttcn http_jabber_org_protocol_pubsub_event.ttcn http_jabber_org_protocol_pubsub_owner.ttcn jabber_x_data.ttcn \
jabber_server.ttcn jabber_client.ttcn urn_ietf_params_xml_ns_xmpp_stanzas.ttcn http_jabber_org_protocol_disco_info.ttcn http_jabber_org_protocol_disco_items.ttcn \
urn_ietf_params_xml_ns_xmpp_bind.ttcn urn_ietf_params_xml_ns_xmpp_sasl.ttcn urn_ietf_params_xml_ns_xmpp_streams.ttcn urn_ietf_params_xml_ns_xmpp_tls.ttcn http_etherx_jabber_org_streams.ttcn jabber_iq_auth.ttcn   TCCEncoding_Functions.ttcn \
IPL4asp_Types.ttcn IPL4asp_PortType.ttcn Socket_API_Definitions.ttcn NTAF_templates.ttcn NTAF_Auth.ttcn TCCConversion_Functions.ttcn NTAF_ProviderConformance.ttcn  NTAF_static.ttcn NTAF_RequestorConformance.ttcn NTAF_Television.ttcn
#TCCOpenSecurity_Functions.ttcn

# ASN.1 modules of this project:
ASN1_MODULES =

# C++ source & header files generated from the TTCN-3 & ASN.1 modules of
# this project:
GENERATED_SOURCES = $(TTCN3_MODULES:.ttcn=.cc) $(ASN1_MODULES:.asn=.cc) 

GENERATED_HEADERS = $(GENERATED_SOURCES:.cc=.hh) 

# C/C++ Source & header files of Test Ports, external functions and
# other modules:
USER_SOURCES = IPL4asp_PT.cc  TCCEncoding.cc Auth_EncDec.cc XMPP_slicer.cc TCCConversion.cc
#TCCOpenSecurity.cc
USER_HEADERS = IPL4asp_PT.hh 

# Object files of this project that are needed for the executable test suite:
OBJECTS = $(GENERATED_OBJECTS) $(USER_OBJECTS)

GENERATED_OBJECTS = $(GENERATED_SOURCES:.cc=.o) 

USER_OBJECTS = IPL4asp_PT.o TCCEncoding.o Auth_EncDec.o XMPP_slicer.o TCCConversion.o 
#TCCOpenSecurity.o

# Other files of the project (Makefile, configuration files, etc.)
# that will be added to the archived source files:
OTHER_FILES = Makefile NTAF.cfg ../src/install.script logF.sh

# The name of the executable test suite:
TARGET = NTAF_exec

#
# Do not modify these unless you know what you are doing...
# Platform specific additional libraries:
#
SOLARIS_LIBS = -lsocket -lnsl -lxml2
SOLARIS8_LIBS = -lsocket -lnsl -lxml2
LINUX_LIBS = -lxml2 -lpthread -lrt 
FREEBSD_LIBS = -lxml2
WIN32_LIBS = -lxml2

#
# Rules for building the executable...
#

all: $(TARGET) ;

objects: $(OBJECTS) compile;

$(TARGET): $(OBJECTS)
	if $(CXX) $(LDFLAGS) -o $@ $(OBJECTS) \
	-L$(TTCN3_DIR)/lib -l$(TTCN3_LIB) \
	-L$(OPENSSL_DIR)/lib -lcrypto \
	-L$(XMLDIR)/lib $($(PLATFORM)_LIBS); \
	then : ; else $(TTCN3_DIR)/bin/titanver $(OBJECTS); exit 1; fi

.cc.o .c.o:
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

$(GENERATED_SOURCES) $(GENERATED_HEADERS): compile
	@if [ ! -f $@ ]; then rm -f compile; $(MAKE) compile; fi

check: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler -s $(COMPILER_FLAGS) \
	$(TTCN3_MODULES) $(PREPROCESSED_TTCN3_MODULES) $(ASN1_MODULES)

compile: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler $(COMPILER_FLAGS) \
	$(TTCN3_MODULES) $(ASN1_MODULES) - $?
	touch $@

browserdata.dat: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler -B -s $(COMPILER_FLAGS) \
	$(TTCN3_MODULES) $(ASN1_MODULES)

clean:
	-rm -f $(TARGET) $(OBJECTS) $(GENERATED_HEADERS) \
	$(GENERATED_SOURCES) compile \
	browserdata.dat tags *.log

dep: $(GENERATED_SOURCES) $(USER_SOURCES)
	makedepend $(CPPFLAGS) -DMAKEDEPEND_RUN $(GENERATED_SOURCES) $(USER_SOURCES)

archive:
	mkdir -p $(ARCHIVE_DIR)
	tar -cvhf - $(TTCN3_MODULES) $(ASN1_MODULES) \
	$(USER_HEADERS) $(USER_SOURCES) $(OTHER_FILES) \
	| gzip >$(ARCHIVE_DIR)/`basename $(TARGET) .exe`-`date '+%y%m%d-%H%M'`.tgz

diag:
	$(TTCN3_DIR)/bin/compiler -v 2>&1
	$(TTCN3_DIR)/bin/mctr_cli -v 2>&1
	$(CXX) -v 2>&1
	@echo TTCN3_DIR=$(TTCN3_DIR)
	@echo OPENSSL_DIR=$(OPENSSL_DIR)
	@echo XMLDIR=$(XMLDIR)
	@echo PLATFORM=$(PLATFORM)

#
# Add your rules here if necessary...
#

