/*******************************************************************************
* Copyright (c) 2000-2021 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator version: CRL 113 200/5 R4D                       
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v2.0
* which accompanies this distribution, and is available at
* https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
*******************************************************************************/
//
//  File:          NoTargetNamespace.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Fri Mar  4 09:23:30 2016
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- Ims3gpp.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "NoTargetNamespace" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module NoTargetNamespace {


import from XSD all;


type record TIMS3GPP
{
	XSD.Decimal version,
	record of XSD.String attr optional,
	union {
		TAlternativeService alternative_service,
		XSD.String service_info
	} choice,
	record of XSD.String elem_list
}
with {
  variant "name as uncapitalized";
  variant (version) "attribute";
  variant (attr) "anyAttributes";
  variant (choice) "untagged";
  variant (choice.alternative_service) "name as 'alternative-service'";
  variant (choice.service_info) "name as 'service-info'";
  variant (elem_list) "untagged";
  variant (elem_list[-]) "anyElement";
};


type record TAlternativeService
{
	record of XSD.String attr optional,
	TType type_,
	XSD.String reason,
	record of XSD.String elem_list
}
with {
  variant "name as uncapitalized";
  variant (attr) "anyAttributes";
  variant (type_) "name as 'type'";
  variant (elem_list) "untagged";
  variant (elem_list[-]) "anyElement";
};


type record TType
{
	record of XSD.String attr optional,
	record of XSD.String elem_list
}
with {
  variant "name as uncapitalized";
  variant (attr) "anyAttributes";
  variant (elem_list) "untagged";
  variant (elem_list[-]) "anyElement";
};


type record TAction
{
	record of XSD.String attr optional,
	record of XSD.String elem_list
}
with {
  variant "name as uncapitalized";
  variant (attr) "anyAttributes";
  variant (elem_list) "untagged";
  variant (elem_list[-]) "anyElement";
};


/* root element */


type TIMS3GPP Ims_3gpp
with {
  variant "name as 'ims-3gpp'";
  variant "element";
};


/* emergency element for //ims-3gpp//alternative-service//type */


type record Emergency
{

}
with {
  variant "name as uncapitalized";
  variant "element";
};


/* restoration element for //ims-3gpp//alternative-service//type */


type record Restoration
{

}
with {
  variant "name as uncapitalized";
  variant "element";
};


/* action element for //ims-3gpp//alternative-service */


type TAction Action
with {
  variant "name as uncapitalized";
  variant "element";
};


/* emergency-registration element for //ims-3gpp//alternative-service//action */


type record Emergency_registration
{

}
with {
  variant "name as 'emergency-registration'";
  variant "element";
};


/* initial-registration element for //ims-3gpp//alternative-service//action */


type record Initial_registration
{

}
with {
  variant "name as 'initial-registration'";
  variant "element";
};


}
with {
  encode "XML";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
  variant "elementFormQualified";
}
