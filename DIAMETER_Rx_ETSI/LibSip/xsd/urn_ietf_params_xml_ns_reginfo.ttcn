/*******************************************************************************
* Copyright (c) 2000-2021 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator version: CRL 113 200/5 R4D                       
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v2.0
* which accompanies this distribution, and is available at
* https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
*******************************************************************************/
//
//  File:          urn_ietf_params_xml_ns_reginfo.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Fri Mar  4 09:23:30 2016
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- regInfo.xsd
//			/* xml version = "1.0" */
//			/* targetnamespace = "urn:ietf:params:xml:ns:reginfo" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module urn_ietf_params_xml_ns_reginfo {


import from XSD all;


import from http_www_w3_org_XML_1998_namespace all;


/* RFC 3680 clause 5.4 */


/* This import brings in the XML language attribute xml:lang */


type record Reginfo
{
	enumerated {
	full,
	partial
	} state,
	XSD.NonNegativeInteger version,
	record of Registration registration_list,
	record of XSD.String elem_list
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (state) "attribute";
  variant (version) "attribute";
  variant (registration_list) "untagged";
  variant (registration_list[-]) "name as 'registration'";
  variant (elem_list) "untagged";
  variant (elem_list[-]) "anyElement except unqualified, 'urn:ietf:params:xml:ns:reginfo'";
};


type record Registration
{
	XSD.AnyURI aor,
	XSD.String id,
	enumerated {
	active,
	init,
	terminated
	} state,
	record of Contact contact_list,
	record of XSD.String elem_list
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (aor) "attribute";
  variant (id) "attribute";
  variant (state) "attribute";
  variant (contact_list) "untagged";
  variant (contact_list[-]) "name as 'contact'";
  variant (elem_list) "untagged";
  variant (elem_list[-]) "anyElement except unqualified, 'urn:ietf:params:xml:ns:reginfo'";
};


type record Contact
{
	XSD.String callid optional,
	XSD.UnsignedLong cseq optional,
	XSD.UnsignedLong duration_registered optional,
	enumerated {
	created,
	deactivated,
	expired,
	probation,
	refreshed,
	registered,
	rejected,
	shortened,
	unregistered
	} event,
	XSD.UnsignedLong expires optional,
	XSD.String id,
	XSD.String q optional,
	XSD.UnsignedLong retry_after optional,
	enumerated {
	active,
	terminated
	} state,
	XSD.AnyURI uri,
	record {
		Lang lang optional,
		XSD.String base
	} display_name optional,
	record of record {
		XSD.String name,
		XSD.String base
	} unknown_param_list,
	record of XSD.String elem_list
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (callid) "attribute";
  variant (cseq) "attribute";
  variant (duration_registered) "name as 'duration-registered'";
  variant (duration_registered) "attribute";
  variant (event) "attribute";
  variant (expires) "attribute";
  variant (id) "attribute";
  variant (q) "attribute";
  variant (retry_after) "name as 'retry-after'";
  variant (retry_after) "attribute";
  variant (state) "attribute";
  variant (display_name) "name as 'display-name'";
  variant (display_name.lang) "attribute";
  variant (display_name.base) "untagged";
  variant (unknown_param_list) "untagged";
  variant (unknown_param_list[-]) "name as 'unknown-param'";
  variant (unknown_param_list[-].name) "attribute";
  variant (unknown_param_list[-].base) "untagged";
  variant (elem_list) "untagged";
  variant (elem_list[-]) "anyElement except unqualified, 'urn:ietf:params:xml:ns:reginfo'";
};


}
with {
  encode "XML";
  variant "namespace as 'urn:ietf:params:xml:ns:reginfo' prefix 'tns'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
  variant "elementFormQualified";
}
